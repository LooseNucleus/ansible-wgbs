#main.yml 
--- 
- name: Ensure that the software folder already exists 
  file: path={{ ansible_env.PWD }}/software state=directory mode=0777
#- name: make sure bsmap folder exists
#  file: path={{ ansible_env.PWD }}/software/bsmap-2.90 state=directory mode=0777

- name: download bsmap 
  get_url: 
    url: http://lilab.research.bcm.edu/dldcc-web/lilab/yxi/bsmap/bsmap-2.90.tgz 
    dest: "{{ ansible_env.PWD }}"
  
- name: unpack bsmap 
  unarchive: 
    src: "{{ ansible_env.PWD }}/bsmap-2.90.tgz" 
    dest: "{{ ansible_env.PWD }}/software" 
    copy: no

- name: make bsmap 
  make:
    chdir: "{{ ansible_env.PWD }}/software/bsmap-2.90"

#- name: install bsmap
#  make: 
#    chdir: "{{ ansible_env.PWD }}/software/bsmap-2.90"
#    target:  install
#  become: yes

- name: Checks if the environment file already has an entry for the PATH
  replace:
    dest: "{{ ansible_env.PWD }}/.bashrc"
    regexp: 'export PATH=(.*)'
    replace: 'export PATH=\1:modified'
  register: checkPath

#- name: print checkPath status
#  debug:
#    msg: "checkPath status is {{ checkPath }}"

- name: Add a PATH entry if the PATH is not already defined
  lineinfile:
    dest: "{{ ansible_env.PWD }}/.bashrc"
    state: present
    line: "export PATH={{ ansible_env.PATH }}:{{ ansible_env.PWD }}/software/bsmap-2.90"
    regexp: ''
    insertafter: EOF
  when: checkPath.changed == false

- name: append bsmap to the PATH
  lineinfile:
    dest: "{{ ansible_env.PWD }}/.bashrc"
    state: present
    backrefs: yes
    regexp: "export PATH=(.*)"
    line: 'export PATH={{ ansible_env.PWD }}/software/bsmap-2.90:\1'
  when: checkPath.changed

- name: fully fix path
  lineinfile:
    dest: "{{ ansible_env.PWD }}/.bashrc"
    state: present
    backrefs: yes
    regexp: 'export PATH=(.*)(:modified)(.*)'
    line: 'export PATH=\1\3'
  when: checkPath.changed

- name: remove gz file 
  file: 
    state: absent 
    path: "{{ ansible_env.PWD }}/bsmap-2.90.tgz"

- name: remove noninteractive filter on bashrc
  blockinfile: 
    path: "{{ ansible_env.PWD }}/.bashrc"
    marker: "case $- in"
    state: absent
    block: |
      case $- in
      *i*) ;;
      *) return;;
      esac

